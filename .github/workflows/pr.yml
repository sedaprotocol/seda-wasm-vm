name: Tests & Checks
on: [pull_request]

env:
  GO_VERSION: 1.21.3
  # https://releases.rs/docs/1.85.0/ release date
  NIGHTLY_TOOLCHAIN: nightly-2025-02-20
  RUST_BACKTRACE: 1

jobs:
  go_fmt:
    name: Go Fmt
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 📥 Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true

      - name: 📋 Lint Check
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout 10m --tests=false
          working-directory: tallyvm

  go_test:
    name: Go Test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 📥 Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true

      - name: 🧪 Test
        run: cd tallyvm && go test -v ./...

  rust_fmt:
    name: Rust Fmt
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 📥 Install Rust Nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
          components: rustfmt

      - name: 📋 Format Check
        run: cargo fmt --all -- --check

  rust_test_and_lint:
    name: Rust Test & Lint
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: ⚡ Cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: 🥬 Use Mold Linker
        uses: rui314/setup-mold@v1

      - name: 📥 Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: ${{ env.NIGHTLY_TOOLCHAIN }}
          components: clippy rustc-codegen-cranelift-preview llvm-tools-preview

      - name: 📋 Clippy Check
        env:
          RUSTFLAGS: -Zthreads=4 -Zshare-generics=y -Zcodegen-backend=cranelift
        run: cargo clippy --all-features --locked -- -D warnings

      - name: ☁️ Install Nextest
        uses: taiki-e/install-action@nextest

      - name: ☁️ Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: 🧪 Test Coverage
        run: cargo cov-ci

      - name: 📊 Generate Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: "cobertura.xml"
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          # thresholds: "10 30"

      - name: 💬 Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
