

/* Generated with cbindgen:0.26.0 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

typedef struct FfiExitInfo {
  const char *exit_message;
  int32_t exit_code;
} FfiExitInfo;

typedef struct FfiVmResult {
  const char *const *stdout_ptr;
  uintptr_t stdout_len;
  const char *const *stderr_ptr;
  uintptr_t stderr_len;
  const uint8_t *result_ptr;
  uintptr_t result_len;
  struct FfiExitInfo exit_info;
  uint64_t gas_used;
} FfiVmResult;

typedef struct FfiVmSettings {
  const char *sedad_home;
  uintptr_t max_result_bytes;
  uintptr_t stdout_limit;
  uintptr_t stderr_limit;
} FfiVmSettings;

typedef struct FfiTallyRequest {
  const uint8_t *wasm_bytes;
  uintptr_t wasm_bytes_len;
  const char *const *args_ptr;
  uintptr_t args_count;
  const char *const *env_keys_ptr;
  const char *const *env_values_ptr;
  uintptr_t env_count;
} FfiTallyRequest;

typedef struct FfiInvalidateWasmCacheInfo {
  const char *wasm_cache_dirs;
  const char *version_name;
} FfiInvalidateWasmCacheInfo;

/**
 * # Safety
 */
void free_ffi_exit_info(struct FfiExitInfo *exit_info);

/**
 * # Safety
 */
void free_ffi_vm_result(struct FfiVmResult *vm_result);

/**
 * # Safety
 */
struct FfiVmResult execute_tally_request(struct FfiVmSettings settings,
                                         struct FfiTallyRequest request);

/**
 * # Safety
 */
const struct FfiVmResult *execute_tally_requests(struct FfiVmSettings settings,
                                                 const struct FfiTallyRequest *request,
                                                 uintptr_t count);

/**
 * # Safety
 */
const struct FfiVmResult *execute_tally_requests_parallel(struct FfiVmSettings settings,
                                                          const struct FfiTallyRequest *request,
                                                          uintptr_t count);

/**
 * # Safety
 */
void free_ffi_invalidate_wasm_cache_info(struct FfiInvalidateWasmCacheInfo *cache_info);

/**
 * # Safety
 */
struct FfiInvalidateWasmCacheInfo invalidate_wasm_cache_info(const char *sedad_home_ptr);
